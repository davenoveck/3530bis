<!-- Copyright (C) The IETF Trust (2007-2008) -->
<!-- Copyright (C) The Internet Society (2006) -->
<section anchor="sec:i18n" title="Internationalization">

  <t>
    The primary issue in which NFS version 4 needs to deal with
    internationalization, or I18N, is with respect to file names and
    other strings as used within the protocol.  The choice of string
    representation must allow reasonable name/string access to clients
    which use various languages.  The UTF-8 encoding of the UCS as
    defined by <xref target="ISO.10646-1.1993" /> allows for this type of access and follows the
    policy described in "IETF Policy on Character Sets and Languages",
    <xref target="RFC2277" />.
  </t>

  <t>
    <xref target="RFC3454" />, otherwise know as "stringprep", documents a framework
    for using Unicode/UTF-8 in networking protocols, so as "to increase
    the likelihood that string input and string comparison work in ways
    that make sense for typical users throughout the world."  A protocol
    must define a profile of stringprep "in order to fully specify the
    processing options."  The remainder of this Internationalization
    section defines the NFS version 4 stringprep profiles.  Much of
    terminology used for the remainder of this section comes from
    stringprep.
  </t>

  <t>
    There are three UTF-8 string types defined for NFS version 4:
    utf8str_cs, utf8str_cis, and utf8str_mixed.  Separate profiles are
    defined for each. Each profile defines the following, as required
    by stringprep:

    <list style='symbols'>
      <t>
        The intended applicability of the profile
      </t>

      <t>
        The character repertoire that is the input and output to
        stringprep (which is Unicode 3.2 for referenced version of
        stringprep)
      </t>

      <t>
        The mapping tables from stringprep used (as described in section
        3 of stringprep)
      </t>

      <t>
        Any additional mapping tables specific to the profile
      </t>

      <t>
        The Unicode normalization used, if any (as described in section 4
        of stringprep)
      </t>

      <t>
        The tables from stringprep listing of characters that are
        prohibited as output (as described in section 5 of stringprep)
      </t>

      <t>
        The bidirectional string testing used, if any (as described in
        section 6 of stringprep)
      </t>

      <t>
        Any additional characters that are prohibited as output specific
        to the profile
      </t>
    </list>
  </t>

  <t>
    Stringprep discusses Unicode characters, whereas NFS version 4
    renders UTF-8 characters.  Since there is a one to one mapping
    from UTF-8 to Unicode, where ever the remainder of this document
    refers to to Unicode, the reader should assume UTF-8.
  </t>

  <t>
    Much of the text for the profiles comes from <xref target="RFC3454" />.
  </t>

  <section title="Stringprep profile for the utf8str_cs type">

    <t>
      Every use of the utf8str_cs type definition in the NFS version 4
      protocol specification follows the profile named nfs4_cs_prep.
    </t>

    <section title="Intended applicability of the nfs4_cs_prep profile">

      <t>
        The utf8str_cs type is a case sensitive string of UTF-8 characters.
        Its primary use in NFS Version 4 is for naming components and
        pathnames.  Components and pathnames are stored on the server's
        filesystem.  Two valid distinct UTF-8 strings might be the same
        after processing via the utf8str_cs profile.  If the strings are
        two names inside a directory, the NFS version 4 server will need
        to either:

        <list style='symbols'>
          <t>
            disallow the creation of a second name if it's post processed
            form collides with that of an existing name, or
          </t>

          <t>
            allow the creation of the second name, but arrange so that
            after post processing, the second name is different than the
            post processed form of the first name.
          </t>
        </list>
      </t>

    </section>
    <section title="Character repertoire of nfs4_cs_prep">

      <t>
        The nfs4_cs_prep profile uses Unicode 3.2, as defined in stringprep's
        Appendix A.1
      </t>

    </section>
    <section title="Mapping used by nfs4_cs_prep">

      <t>
        The nfs4_cs_prep profile specifies mapping using the following tables
        from stringprep:

        <list style='symbols'>
          <t>
            Table B.1
          </t>
        </list>
      </t>

      <t>
        Table B.2 is normally not part of the nfs4_cs_prep profile as it is
        primarily for dealing with case-insensitive comparisons.  However,
        if the NFS version 4 file server supports the case_insensitive
        filesystem attribute, and if case_insensitive is true, the NFS
        version 4 server MUST use Table B.2 (in addition to Table B1)
        when processing utf8str_cs strings, and the NFS version 4 client
        MUST assume Table B.2 (in addition to Table B.1) are being used.
      </t>

      <t>
        If the case_preserving attribute is present and set to false,
        then the NFS version 4 server MUST use table B.2 to map case when
        processing utf8str_cs strings.  Whether the server maps from lower
        to upper case or the upper to lower case is an implementation
        dependency.
      </t>

    </section>
    <section title="Normalization used by nfs4_cs_prep">

      <t>
        The nfs4_cs_prep profile does not specify a normalization form.  A
        later revision of this specification may specify a particular
        normalization form.  Therefore, the server and client can expect
        that they may receive unnormalized characters within protocol
        requests and responses.  If the operating environment requires
        normalization, then the implementation must normalize utf8str_cs
        strings within the protocol before presenting the information to
        an application (at the client) or local filesystem (at the server).
      </t>

    </section>
    <section title="Prohibited output for nfs4_cs_prep">

      <t>
        The nfs4_cs_prep profile specifies prohibiting using the following
        tables from stringprep:

        <list style='symbols'>
          <t>
            Table C.3
          </t>
          <t>
            Table C.4
          </t>
          <t>
            Table C.5
          </t>
          <t>
            Table C.6
          </t>
          <t>
            Table C.7
          </t>
          <t>
            Table C.8
          </t>
          <t>
            Table C.9
          </t>
        </list>
      </t>

    </section>
    <section title="Bidirectional output for nfs4_cs_prep">

      <t>
        The nfs4_cs_prep profile does not specify any checking of
        bidirectional strings.
      </t>

    </section>
  </section>
  <section title="Stringprep profile for the utf8str_cis type">

    <t>
      Every use of the utf8str_cis type definition in the NFS version
      4 protocol specification follows the profile named nfs4_cis_prep.
    </t>

    <section title="Intended applicability of the nfs4_cis_prep profile">

      <t>
        The utf8str_cis type is a case insensitive string of UTF-8
        characters.  Its primary use in NFS Version 4 is for naming NFS
        servers.
      </t>

    </section>
    <section title="Character repertoire of nfs4_cis_prep">

      <t>
        The nfs4_cis_prep profile uses Unicode 3.2, as defined in
        stringprep's Appendix A.1
      </t>

    </section>
    <section title="Mapping used by nfs4_cis_prep">

      <t>
        The nfs4_cis_prep profile specifies mapping using the following
        tables from stringprep:

        <list style='symbols'>
          <t>
            Table B.1
          </t>
          <t>
            Table B.2
          </t>
        </list>
      </t>

    </section>
    <section title="Normalization used by nfs4_cis_prep">

      <t>
        The nfs4_cis_prep profile specifies using Unicode normalization
        form KC, as described in stringprep.
      </t>

    </section>
    <section title="Prohibited output for nfs4_cis_prep">

      <t>
        The nfs4_cis_prep profile specifies prohibiting using the following
        tables from stringprep:

        <list style='symbols'>
          <t>
            Table C.1.2
          </t>
          <t>
            Table C.2.2
          </t>
          <t>
            Table C.3
          </t>
          <t>
            Table C.4
          </t>
          <t>
            Table C.5
          </t>
          <t>
            Table C.6
          </t>
          <t>
            Table C.7
          </t>
          <t>
            Table C.8
          </t>
          <t>
            Table C.9
          </t>
        </list>
      </t>

    </section>
    <section title="Bidirectional output for nfs4_cis_prep">

      <t>
        The nfs4_cis_prep profile specifies checking bidirectional strings
        as described in stringprep's section 6.
      </t>

    </section>
  </section>
  <section title="Stringprep profile for the utf8str_mixed type">

    <t>
      Every use of the utf8str_mixed type definition in the NFS version
      4 protocol specification follows the profile named nfs4_mixed_prep.
    </t>

    <section title="Intended applicability of the nfs4_mixed_prep profile">

      <t>
        The utf8str_mixed type is a string of UTF-8 characters, with a prefix
        that is case sensitive, a separator equal to '@', and a suffix that
        is fully qualified domain name.  Its primary use in NFS Version
        4 is for naming principals identified in an Access Control Entry.
      </t>

    </section>
    <section title="Character repertoire of nfs4_mixed_prep">

      <t>
        The nfs4_mixed_prep profile uses Unicode 3.2, as defined in
        stringprep's Appendix A.1
      </t>

    </section>
    <section title="Mapping used by nfs4_cis_prep">

      <t>
        For the prefix and the separator of a utf8str_mixed string, the
        nfs4_mixed_prep profile specifies mapping using the following
        table from stringprep:

        <list style='symbols'>
          <t>
            Table B.1
          </t>
        </list>
      </t>

      <t>
        For the suffix of a utf8str_mixed string, the nfs4_mixed_prep
        profile specifies mapping using the following tables from
        stringprep:

        <list style='symbols'>
          <t>
            Table B.1
          </t>
          <t>
            Table B.2
          </t>
        </list>
      </t>

    </section>
    <section title="Normalization used by nfs4_mixed_prep">

      <t>
        The nfs4_mixed_prep profile specifies using Unicode normalization
        form KC, as described in stringprep.
      </t>

    </section>
    <section title="Prohibited output for nfs4_mixed_prep">

      <t>
        The nfs4_mixed_prep profile specifies prohibiting using the
        following tables from stringprep:

        <list style='symbols'>
          <t>
            Table C.1.2
          </t>
          <t>
            Table C.2.2
          </t>
          <t>
            Table C.3
          </t>
          <t>
            Table C.4
          </t>
          <t>
            Table C.5
          </t>
          <t>
            Table C.6
          </t>
          <t>
            Table C.7
          </t>
          <t>
            Table C.8
          </t>
          <t>
            Table C.9
          </t>
        </list>
      </t>

    </section>
    <section title="Bidirectional output for nfs4_mixed_prep">

      <t>
        The nfs4_mixed_prep profile specifies checking bidirectional
        strings as described in stringprep's section 6.
      </t>
    </section>
  </section>

  <section anchor="ss:i18n:utf8_err" title="UTF-8 Related Errors">

    <t>
      Where the client sends an invalid UTF-8 string, the server should
      return an NFS4ERR_INVAL error.  This includes cases in which
      inappropriate prefixes are detected and where the count includes
      trailing bytes that do not constitute a full UCS character.
    </t>

    <t>
      Where the client supplied string is valid UTF-8 but contains
      characters that are not supported by the server as a value for
      that string (e.g., names containing characters that have more than
      two octets on a filesystem that supports Unicode characters only),
      the server should return an NFS4ERR_BADCHAR error.
    </t>

    <t>
      Where a UTF-8 string is used as a file name, and the filesystem,
      while supporting all of the characters within the name, does not
      allow that particular name to be used, the server should return the
      error NFS4ERR_BADNAME.  This includes situations in which the server
      filesystem imposes a normalization constraint on name strings,
      but will also include such situations as filesystem prohibitions
      of "."  and ".." as file names for certain operations, and other
      such constraints.
    </t>
  </section>

</section>
