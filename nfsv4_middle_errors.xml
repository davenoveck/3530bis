<!-- Copyright (C) The IETF Trust (2007-2008) -->
<!-- Copyright (C) The Internet Society (2006) -->
<section anchor="sec:error_defs" title="Error Definitions">

  <t>
    NFS error numbers are assigned to failed operations within
    a compound request.  A compound request contains a number of
    NFS operations that have their results encoded in sequence in
    a compound reply.  The results of successful operations will
    consist of an NFS4_OK status followed by the encoded results of
    the operation.  If an NFS operation fails, an error status will be
    entered in the reply and the compound request will be terminated.
  </t>

  <t>
    A description of each defined error follows:

    <list style='hanging'>
      <t hangText="NFS4_OK">
        Indicates the operation completed successfully.
      </t>

      <t hangText="NFS4ERR_ACCESS">
        Permission denied. The caller does not have the correct
        permission to perform the requested operation. Contrast
        this with NFS4ERR_PERM, which restricts itself to owner or
        privileged user permission failures.
      </t>

      <t hangText="NFS4ERR_ATTRNOTSUPP">
        An attribute specified is not supported by the server.
        Does not apply to the GETATTR operation.
      </t>

      <t hangText="NFS4ERR_ADMIN_REVOKED">
        Due to administrator intervention, the lockowner's record
        locks, share reservations, and delegations have been revoked
        by the server.
      </t>

      <t hangText="NFS4ERR_BADCHAR">
        A UTF-8 string contains a character which is not supported
        by the server in the context in which it being used.
      </t>

      <t hangText="NFS4ERR_BAD_COOKIE">
        READDIR cookie is stale.
      </t>

      <t hangText="NFS4ERR_BADHANDLE">
        Illegal NFS filehandle. The filehandle failed internal
        consistency checks.
      </t>

      <t hangText="NFS4ERR_BADNAME">
        A name string in a request consists of valid UTF-8 characters
        supported by the server but the name is not supported by the
        server as a valid name for current operation.
      </t>

      <t hangText="NFS4ERR_BADOWNER">
        An owner, owner_group, or ACL attribute value can not be
        translated to local representation.
      </t>

      <t hangText="NFS4ERR_BADTYPE">
        An attempt was made to create an object of a type not supported
        by the server.
      </t>

      <t hangText="NFS4ERR_BAD_RANGE">
        The range for a LOCK, LOCKT, or LOCKU operation is not
        appropriate to the allowable range of offsets for the server.
      </t>

      <t hangText="NFS4ERR_BAD_SEQID">
        The sequence number in a locking request is neither the next
        expected number or the last number processed.
      </t>

      <t hangText="NFS4ERR_BAD_STATEID">
        A stateid generated by the current server instance, but
        which does not designate any locking state (either current
        or superseded) for a current lockowner-file pair, was used.
      </t>

      <t hangText="NFS4ERR_BADXDR">
        The server encountered an XDR decoding error while processing
        an operation.
      </t>

      <t hangText="NFS4ERR_CLID_INUSE">
        The SETCLIENTID operation has found that a client id is
        already in use by another client.
      </t>

      <t hangText="NFS4ERR_DEADLOCK">
        The server has been able to determine a file locking deadlock
        condition for a blocking lock request.
      </t>

      <t hangText="NFS4ERR_DELAY">
        The server initiated the request, but was not able to complete
        it in a timely fashion. The client should wait and then try
        the request with a new RPC transaction ID.  For example,
        this error should be returned from a server that supports
        hierarchical storage and receives a request to process a file
        that has been migrated. In this case, the server should start
        the immigration process and respond to client with this error.
        This error may also occur when a necessary delegation recall
        makes processing a request in a timely fashion impossible.
      </t>

      <t hangText="NFS4ERR_DENIED">
        An attempt to lock a file is denied.  Since this may be a
        temporary condition, the client is encouraged to retry the
        lock request until the lock is accepted.
      </t>

      <t hangText="NFS4ERR_DQUOT">
        Resource (quota) hard limit exceeded. The user's resource
        limit on the server has been exceeded.
      </t>

      <t hangText="NFS4ERR_EXIST">
        File exists. The file specified already exists.
      </t>

      <t hangText="NFS4ERR_EXPIRED">
        A lease has expired that is being used in the current
        operation.
      </t>

      <t hangText="NFS4ERR_FBIG">
        File too large. The operation would have caused a file to
        grow beyond the server's limit.
      </t>

      <t hangText="NFS4ERR_FHEXPIRED">
        The filehandle provided is volatile and has expired at
        the server.
      </t>

      <t hangText="NFS4ERR_FILE_OPEN">
        The operation can not be successfully processed because a
        file involved in the operation is currently open.
      </t>

      <t hangText="NFS4ERR_GRACE">
        The server is in its recovery or grace period which should
        match the lease period of the server.
      </t>

      <t hangText="NFS4ERR_INVAL">
        Invalid argument or unsupported argument for an operation. Two
        examples are attempting a READLINK on an object other than
        a symbolic link or specifying a value for an enum field that
        is not defined in the protocol (e.g., nfs_ftype4).
      </t>

      <t hangText="NFS4ERR_IO">
        I/O error. A hard error (for example, a disk error) occurred
        while processing the requested operation.
      </t>

      <t hangText="NFS4ERR_ISDIR">
        Is a directory. The caller specified a directory in a
        non-directory operation.
      </t>

      <t hangText="NFS4ERR_LEASE_MOVED">
        A lease being renewed is associated with a filesystem that
        has been migrated to a new server.
      </t>

      <t hangText="NFS4ERR_LOCKE">
        A read or write operation was attempted on a locked file.
      </t>

      <t hangText="NFS4ERR_LOCK_NOTSUPP">

        Server does not support atomic upgrade or downgrade of locks.
      </t>

      <t hangText="NFS4ERR_LOCK_RANGE">
        A lock request is operating on a sub-range of a current lock
        for the lock owner and the server does not support this type
        of request.
      </t>

      <t hangText="NFS4ERR_LOCKS_HELD">
        A CLOSE was attempted and file locks would exist after
        the CLOSE.
      </t>

      <t hangText="NFS4ERR_MINOR_VERS_MISMATCH">
        The server has received a request that specifies an unsupported
        minor version.  The server must return a COMPOUND4res with
        a zero length operations result array.
      </t>

      <t hangText="NFS4ERR_MLINK">
        Too many hard links.
      </t>

      <t hangText="NFS4ERR_MOVED">
        The filesystem which contains the current filehandle object
        has been relocated or migrated to another server.  The client
        may obtain the new filesystem location by obtaining the
        "fs_locations" attribute for the current filehandle.
        For further discussion, refer to the section "Filesystem
        Migration or Relocation".
      </t>

      <t hangText="NFS4ERR_NAMETOOLONG">
        The filename in an operation was too long.
      </t>

      <t hangText="NFS4ERR_NOENT">
        No such file or directory. The file or directory name specified
        does not exist.
      </t>

      <t hangText="NFS4ERR_NOFILEHANDLE">
        The logical current filehandle value (or, in the case of
        RESTOREFH, the saved filehandle value) has not been set
        properly.  This may be a result of a malformed COMPOUND
        operation (i.e., no PUTFH or PUTROOTFH before an operation
        that requires the current filehandle be set).
      </t>

      <t hangText="NFS4ERR_NO_GRACE">
        A reclaim of client state has fallen outside of the grace
        period of the server.  As a result, the server can not
        guarantee that conflicting state has not been provided to
        another client.
      </t>

      <t hangText="NFS4ERR_NOSPC">
        No space left on device. The operation would have caused the
        server's filesystem to exceed its limit.
      </t>

      <t hangText="NFS4ERR_NOTDIR">
        Not a directory. The caller specified a non-directory in a
        directory operation.
      </t>

      <t hangText="NFS4ERR_NOTEMPTY">
        An attempt was made to remove a directory that was not empty.
      </t>

      <t hangText="NFS4ERR_NOTSUPP">
        Operation is not supported.
      </t>

      <t hangText="NFS4ERR_NOT_SAME">
        This error is returned by the VERIFY operation to signify
        that the attributes compared were not the same as provided
        in the client's request.
      </t>

      <t hangText="NFS4ERR_NXIO">
        I/O error. No such device or address.
      </t>

      <t hangText="NFS4ERR_OLD_STATEID">
        A stateid which designates the locking state for a
        lockowner-file at an earlier time was used.
      </t>

      <t hangText="NFS4ERR_OPENMODE">
        The client attempted a READ, WRITE, LOCK or SETATTR operation
        not sanctioned by the stateid passed (e.g., writing to a file
        opened only for read).
      </t>

      <t hangText="NFS4ERR_OP_ILLEGAL">
        An illegal operation value has been specified in the argop
        field of a COMPOUND or CB_COMPOUND procedure.
      </t>

      <t hangText="NFS4ERR_PERM">
        Not owner. The operation was not allowed because the caller
        is either not a privileged user (root) or not the owner of
        the target of the operation.
      </t>

      <t hangText="NFS4ERR_RECLAIM_BAD">
        The reclaim provided by the client does not match any of the
        server's state consistency checks and is bad.
      </t>

      <t hangText="NFS4ERR_RECLAIM_CONFLICT">
        The reclaim provided by the client has encountered a conflict
        and can not be provided.  Potentially indicates a misbehaving
        client.
      </t>

      <t hangText="NFS4ERR_RESOURCE">
        For the processing of the COMPOUND procedure, the server may
        exhaust available resources and can not continue processing
        operations within the COMPOUND procedure.  This error will
        be returned from the server in those instances of resource
        exhaustion related to the processing of the COMPOUND procedure.
      </t>

      <t hangText="NFS4ERR_RESTOREFH">
        The RESTOREFH operation does not have a saved filehandle
        (identified by SAVEFH) to operate upon.
      </t>

      <t hangText="NFS4ERR_ROFS">
        Read-only filesystem. A modifying operation was attempted on
        a read-only filesystem.
      </t>

      <t hangText="NFS4ERR_SAME">
        This error is returned by the NVERIFY operation to signify
        that the attributes compared were the same as provided in
        the client's request.
      </t>

      <t hangText="NFS4ERR_SERVERFAULT">
        An error occurred on the server which does not map to any of
        the legal NFS version 4 protocol error values.  The client
        should translate this into an appropriate error.  UNIX clients
        may choose to translate this to EIO.
      </t>

      <t hangText="NFS4ERR_SHARE_DENIED">
        An attempt to OPEN a file with a share reservation has failed
        because of a share conflict.
      </t>

      <t hangText="NFS4ERR_STALE">
        Invalid filehandle. The filehandle given in the arguments was
        invalid. The file referred to by that filehandle no longer
        exists or access to it has been revoked.
      </t>

      <t hangText="NFS4ERR_STALE_CLIENTID">
        A clientid not recognized by the server was used in a locking
        or SETCLIENTID_CONFIRM request.
      </t>

      <t hangText="NFS4ERR_STALE_STATEID">
        A stateid generated by an earlier server instance was used.
      </t>

      <t hangText="NFS4ERR_SYMLINK">
        The current filehandle provided for a LOOKUP is not a directory
        but a symbolic link.  Also used if the final component of
        the OPEN path is a symbolic link.
      </t>

      <t hangText="NFS4ERR_TOOSMALL">
        The encoded response to a READDIR request exceeds the size
        limit set by the initial request.
      </t>

      <t hangText="NFS4ERR_WRONGSEC">
        The security mechanism being used by the client for the
        operation does not match the server's security policy.
        The client should change the security mechanism being used
        and retry the operation.
      </t>

      <t hangText="NFS4ERR_XDEV">
        Attempt to do an operation between different fsids.
      </t>

    </list>
  </t>
</section>
